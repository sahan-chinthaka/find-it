// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
   provider = "prisma-client-js"
}

datasource db {
   provider  = "postgresql"
   url       = env("POSTGRES_PRISMA_URL")
   directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
   id            String     @id @default(uuid())
   name          String?
   uname         String?    @unique
   email         String?    @unique
   emailVerified DateTime?  @map("email_verified")
   image         String?
   createdAt     DateTime   @default(now())
   updatedAt     DateTime   @updatedAt
   password      String?
   accounts      Account[]
   LostItem      LostItem[]

   @@map("users")
}

model Account {
   id                String   @id @default(cuid())
   userId            String   @map("user_id")
   type              String?
   provider          String
   providerAccountId String   @map("provider_account_id")
   token_type        String?
   refresh_token     String?  @db.Text
   access_token      String?  @db.Text
   expires_at        Int?
   scope             String?
   id_token          String?  @db.Text
   createdAt         DateTime @default(now())
   updatedAt         DateTime @updatedAt
   user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

   @@unique([provider, providerAccountId])
   @@map("accounts")
}

model LostItem {
   id          String    @id @default(cuid())
   title       String
   description String
   type        String
   location    String?
   date        DateTime  @default(now())
   user        User      @relation(fields: [userId], references: [id])
   userId      String
   keywords    Keyword[]
   images      Int       @default(0)
   createdAt   DateTime  @default(now())
   updatedAt   DateTime  @updatedAt
}

model Keyword {
   id         String    @id @default(cuid())
   value      String
   LostItem   LostItem? @relation(fields: [lostItemId], references: [id])
   lostItemId String?
}
